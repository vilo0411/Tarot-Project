/**
* CSS files with the .module.css suffix will be treated as CSS modules
* and scoped locally.
*/

.heroBanner {
padding: 4rem 0;
text-align: center;
position: relative;
overflow: hidden;
}

@media screen and (max-width: 996px) {
.heroBanner {
  padding: 2rem;
}
}

.buttons {
display: flex;
align-items: center;
justify-content: center;
}

/* Global Grid Background */
.globalGridBackground {
position: relative;
width: 100%;
background-color: var(--ifm-background-color);
background-image:
  linear-gradient(rgba(209, 213, 219, 0.15) 1px, transparent 1px),
  linear-gradient(90deg, rgba(209, 213, 219, 0.15) 1px, transparent 1px);
background-size: 60px 60px;
background-position: -1px -1px;
}

/* Dark mode grid adjustment */
:global([data-theme='dark']) .globalGridBackground {
background-image:
  linear-gradient(rgba(255, 255, 255, 0.07) 1px, transparent 1px),
  linear-gradient(90deg, rgba(255, 255, 255, 0.07) 1px, transparent 1px);
}

/* Finer grid overlay */
.globalGridBackground::before {
content: '';
position: absolute;
top: 0;
left: 0;
width: 100%;
height: 100%;
background-image:
  linear-gradient(rgba(209, 213, 219, 0.05) 2px, transparent 2px),
  linear-gradient(90deg, rgba(209, 213, 219, 0.05) 2px, transparent 2px);
background-size: 30px 30px;
pointer-events: none;
z-index: 0;
}

/* Dark mode finer grid adjustment */
:global([data-theme='dark']) .globalGridBackground::before {
background-image:
  linear-gradient(rgba(255, 255, 255, 0.03) 2px, transparent 2px),
  linear-gradient(90deg, rgba(255, 255, 255, 0.03) 2px, transparent 2px);
}

/* Ensure all content appears above the grid */
.globalGridContent {
position: relative;
z-index: 1;
}